{"version":3,"sources":["components/card/card.component.jsx","components/cardlist/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6TAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,aCLdC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAY,YAAjB,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACFZ,UAAW,SACLa,KAAM,SACZF,YAAeA,EACfG,SAAUF,MCyCGG,G,wDA1CZ,aAAc,IAAD,8BACX,gBAcJH,aAAe,SAAAI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbnC,EAAKC,MAAQ,CACZb,SAAU,GACbU,YAAa,IALA,E,qDASf,WAAoB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO1C,WACC,MAAiCC,KAAKN,MAA9Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YAEZU,EAAmBpB,EAASqB,QAAQ,SAAA1B,GAAO,OAChDA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGhD,OACA,sBAAK9B,UAAU,MAAf,UACC,gDAEA,cAAC,EAAD,CACCW,YAAa,iBACbC,aAAgBe,KAAKf,eAEtB,cAAC,EAAD,CACCJ,SAAYoB,W,GArCCI,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.c184368d.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props => (\n    <div className='card-container'>\n        <img \n            alt='monster' \n            src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`}\n        />\n        <h2> {props.monster.name} </h2> \n        <p> {props.monster.email}</p>\n    </div>\n)","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css'\n\n\nexport const CardList = props => (\n    <div className = 'card-list'> \n        {props.monsters.map(monster =>\n            <Card key={monster.id} monster={monster} />\n        )} \n    </div>\n);\n ","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input\n\t\tclassName= 'search'\n        type= 'search' \n\t\tplaceholder= { placeholder } \n\t\tonChange={handleChange}\t\n\t/>\n    \n);","import React from 'react';\nimport { CardList } from './components/cardlist/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\nimport './App.css';\n\nclass App extends React.Component {\n\t\n  \tconstructor(){\n    \tsuper();\n\n    \tthis.state = {\n    \t\tmonsters: [],\n\t\t\tsearchField: '', \n\t\t};\t\n    }\n\t\t\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({ monsters: users }));\n\t}\n\n\thandleChange = e => {\n\t\tthis.setState({ searchField: e.target.value})\n\t};\n\n\trender(){\n\t\tconst { monsters, searchField} = this.state; \n\n\t\tconst filteredMonsters = monsters.filter( monster => \n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t\t);\n\n\t\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<h1> Kitty Rolodex</h1>\n\t\t\t\t\n\t\t\t\t<SearchBox \n\t\t\t\t\tplaceholder= 'search kitties'\n\t\t\t\t\thandleChange= { this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList \n\t\t\t\t\tmonsters = {filteredMonsters} \n\t\t\t\t/>   \n    \t\t</div>\n  \t\t);\n\t}\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}